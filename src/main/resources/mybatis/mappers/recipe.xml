<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.recipe">

	<resultMap type="recipeVO" id="recipe">
		<id property="no" column="no"/>
		<result property="id" column="id"/>
		<result property="title" column="title"/>
		<result property="thumbnail" column="thumbnail"/>
		<result property="description" column="description"/>
		<result property="contents" column="contents"/>
		<result property="category" column="category"/>
		<result property="views" column="views"/>
		<result property="ingredient" column="ingredient"/>
		<result property="ingredientAmount" column="ingredient_amount"/>
		<result property="orders" column="orders"/>
		<result property="postDate" column="post_date"/>
		
		<result property="averageRating" column="average_rating"/>
		<result property="reviewCount" column="review_count"/>
		
		<association property="memberVO" javaType="memberVO">
			<result property="name" column="name"/>
			<result property="nickname" column="nickname"/>
			<result property="phone" column="phone"/>
			<result property="zipcode" column="zipcode"/>
			<result property="address1" column="address1"/>
			<result property="address2" column="address2"/>
			<result property="profile" column="profile"/>
			<result property="joinDate" column="join_date"/>
		</association>
	</resultMap>
	
	<select id="selectRecipes" parameterType="recipeVO" resultMap="recipe">	
	    <![CDATA[
		    SELECT 
		        r.*, 
		        COALESCE(rr.average_rating, 0) AS average_rating, 
				COALESCE(rr.review_count, 0) AS review_count, 
		        m.nickname
		    FROM recipe r
		    LEFT JOIN (
		        SELECT recipe_no, AVG(rating) AS average_rating, COUNT(rating) AS review_count
		        FROM recipe_review
		        GROUP BY recipe_no
		    ) rr ON r.no = rr.recipe_no
		    LEFT JOIN member m ON r.id = m.id
        ]]>
        <if test="category != 0">
	   		<where>
	            r.category=#{category}
	    	</where>
        </if>
	    <![CDATA[
		    ORDER BY r.post_date DESC
        ]]>
	</select>
	
	<select id="selectRecipesById" parameterType="String" resultMap="recipe">
		<![CDATA[
		    SELECT r.*, COALESCE(avg_rating.average_rating, 0) AS average_rating 
				FROM recipe r 
				LEFT JOIN ( 
				SELECT recipe_no, AVG(rating) AS average_rating 
				FROM recipe_review 
				GROUP BY recipe_no 
				) avg_rating ON r.no = avg_rating.recipe_no 
        ]]>
        <where>
        	r.id=#{userId}
        </where>
	    <![CDATA[
		    ORDER BY r.post_date DESC
        ]]>
	</select>
	
	<update id="updateRecipeViews" parameterType="int">
		<![CDATA[
		    UPDATE recipe SET views=views+1 
        ]]>
        <where>
        	no=#{no}
        </where>
	</update>
	
	<select id="selectRecipe" parameterType="recipeVO" resultMap="recipe">	
		<![CDATA[
		SELECT 
			r.*, COALESCE(avg_rating.average_rating, 0) AS average_rating, 
			m.nickname, m.profile  
		FROM recipe r 
		LEFT JOIN ( 
			SELECT recipe_no, AVG(rating) AS average_rating 
			FROM recipe_review 
			GROUP BY recipe_no 
		) avg_rating ON r.no = avg_rating.recipe_no 
		JOIN member m ON r.id=m.id 
        ]]>
        <where>
        	r.no=#{no}
        </where>
	</select>
	
	<insert id="insertRecipe" parameterType="recipeVO">
		<![CDATA[
			INSERT INTO recipe(id, title, thumbnail, description, 
				contents, category, views, 
				ingredient, ingredient_amount, orders, post_date) 
			values(#{id}, #{title}, #{thumbnail}, #{description}, 
				#{contents}, #{category}, 0, 
				#{ingredient}, #{ingredientAmount}, #{orders}, CURRENT_TIMESTAMP)
        ]]>
	</insert>
	
	<select id="selectRecentRecipe" resultMap="recipe">
		<![CDATA[
			SELECT no FROM recipe ORDER BY no DESC LIMIT 1
        ]]>
	</select>
	
	<update id="updateRecipe" parameterType="recipeVO">
		<![CDATA[
		UPDATE recipe SET 
			title=#{title}, thumbnail=#{thumbnail}, description=#{description}, 
			contents=#{contents}, category=#{category}, ingredient=#{ingredient}, 
			ingredient_amount=#{ingredientAmount}, orders=#{orders}
        ]]>
        <where>
        	no=#{no} AND id=#{id}
        </where>
	</update>
	
	<delete id="deleteRecipe" parameterType="int">	
		<![CDATA[
			DELETE FROM recipe
        ]]>
        <where>
        	no=#{no}
        </where>
	</delete>
	
	<select id="selectSearchedRecipes" parameterType="java.util.Map" resultMap="recipe">	
		<![CDATA[
			SELECT 
				r.*, 
				COALESCE(avg_rating.average_rating, 0) AS average_rating, 
				COALESCE(avg_rating.review_count, 0) AS review_count, 
				m.nickname AS nickname 
			FROM recipe r 
			LEFT JOIN ( 
				SELECT 
					recipe_no, AVG(rating) AS average_rating, COUNT(recipe_no) AS review_count 
				FROM recipe_review 
				GROUP BY recipe_no 
			) avg_rating ON r.no = avg_rating.recipe_no 
			LEFT JOIN member m ON r.id=m.id
        ]]>
		<choose>
			<when test="key == 'recipe'">
				<where>
					r.title LIKE '%${word}%'
				</where>
			</when>
			<otherwise>				
				<where>
					nickname LIKE '%${word}%'
				</where>
			</otherwise>
		</choose>
		<if test="category != 0">
			AND category=${category}
		</if>	
		<![CDATA[
			ORDER BY r.post_date DESC
        ]]>
	</select>
</mapper>